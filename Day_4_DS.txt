1. In the Binary Search algorithm, it is suggested to calculate the mid as
beg + (end - beg) / 2 instead of (beg + end) / 2. Why is it so?

ANS: There's no guarantee that (beg+end) is representable; but in the first case the intermediate values, as well as the expected result, are no larger than end, so there is no danger of overflow.


2. Write the algorithm/function for Ternary Search.

int ternarySearch(int l, int r, int search, int ar[])
{
    while (r >= l) {
        int mid1 = l + (r - l) / 3;
        int mid2 = r - (r - l) / 3;
 
        if (ar[mid1] == search) {
            return mid1;
        }
        if (ar[mid2] == search) {
            return mid2;
        }
  
        if (search < ar[mid1]) {
             r = mid1 - 1;
        }
        else if (search > ar[mid2]) {
             l = mid2 + 1;
        }
        else {
            l = mid1 + 1;
            r = mid2 - 1;
        }
    }
    return -1;
}